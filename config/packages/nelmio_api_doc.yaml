nelmio_api_doc:
  documentation:
    info:
      title: Product Manager API
      description:
      version: 1.0.0
    components:
      securitySchemes:
        Bearer:
          type: http
          scheme: bearer
          bearerFormat: JWT
    security:
      - Bearer: []
    paths:
      /api/login_check:
        post:
          description: Get access token for API. After that token will be added on Authorize section.
          tags: 
            - Authentication
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    username: { type: string, example: "user@mail.ro" }
                    password: { type: string, example: "password" }
          responses:
            200:
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      token:
                        {
                          type: string,
                          example: "eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE2NjEzNjMyMTYsImV4cCI6MTY2MTM2NjgxNiwicm9sZXMiOlsiUk9MRV9VU0VSIl0sImVtYWlsIjoidXNlcnRlc3RAbWFpbC5ybyJ9.jUKsSSAKVEe_bDsLR5hK7qICqswXpGNiNA6JVArRQU4sccTylFJdXq9HK3-m-w1ZT7bfZsbQ1lWDSZCOyi5M_8HYSoxHFPS0zq6ccxj4RGPZ-pOhOXlyz-23LUEBf5G7WTyJf13L996lHAhgUkWOfqHl2XVbC2lZ7KkSt56oH0U8GdKrMs8Q_p-R22kBMce2DztEQAjY_cEnsuxvq-xuIf3gUqSHbSz90dWN7p814Leut-49S1u9idxx-cCuIGfEONO4UEMOPb-JKOXF4R1ph46PI6hzMIw9OzBqW-qBtxm9DFEg-k95RvX1w2Bv6AejCVkde5g9mj9UpHsrV0ggMnqFkvokkAqJffxQsS6-WQf7JTg-jSy9oTnPsgGvFXMhEF6kKy1CuP0LDYBP7UYt8xhimHxAAyRtQbcMwgBMOK3AUc1Zwg5T3lIq4ExVv3YttMOYTlVjZQjievgIk5H11OoloDFttY0-z_L8s0hMyW7cCQR7WQkd6QRWJKFrh6H29sx6gNJM4ZAHhbis4z6yQPPK43oOQhkAMX6iBYpkem2yRIpYsZZHqenTITN0PAGcAp7r2OjuWH35UOxQqJy6YC0Ti-824kgRcodK6SRs14Uu13HAUDR4BdPZADvYFV-H3SEhj1PsZeNBYZQld2RUfvBpqjF1WklbO5_CXMtDJlc",
                        }
      /api/products:
        get:
          description: Get products list.
          tags: 
            - Products
          responses:
            200: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        [
                            {
                                "id": 1,
                                "name": "Product1",
                                "description": "Description text1"
                            },
                            {
                                "id": 2,
                                "name": "Product2",
                                "description": "Description text2"
                            },
                            {
                                "id": 3,
                                "name": "Product3",
                                "description": "Description text3"
                            }
                        ]
        post:
          description: Save product.
          tags: 
            - Products
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name: { type: string, example: "Product1" }
                    description: { type: string, example: "Description text1" }
          responses:
            201: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        {
                            "message": "Created new product successfully with id 1"
                        }
      /api/products/{id}:
        get:
          description: Get product.
          tags: 
            - Products
          responses:
            200: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        {
                            "id": 1,
                            "name": "Product1",
                            "description": "Description text1"
                        }
        put:
          description: Update product.
          tags: 
            - Products
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name: { type: string, example: "Product1" }
                    description: { type: string, example: "Description text1" }
          responses:
            200: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        {
                            "message": "Product updated successfully with id 1"
                        }
        patch:
          description: Update product.
          tags: 
            - Products
          requestBody:
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    name: { type: string, example: "Product1" }
                    description: { type: string, example: "Description text1" }
          responses:
            200: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        {
                            "message": "Product updated successfully with id 1"
                        }
        delete:
          description: Delete product.
          tags: 
            - Products
          responses:
            200: 
              description: OK
              content:
                application/json:
                  schema:
                    type: object
                    example: 
                        {
                            "message": "Product deleted successfully with id 1"
                        }                
                              
    tags: 
      - name: Authentication
      - name: Products
  areas: # to filter documented areas
    path_patterns:
      - ^/api(?!/doc|/doc.json,$) # Accepts routes under /api except /api/doc
